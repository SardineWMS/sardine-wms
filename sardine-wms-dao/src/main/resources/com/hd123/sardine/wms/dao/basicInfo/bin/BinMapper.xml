<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hd123.sardine.wms.dao.basicInfo.bin.impl.BinDaoImpl">
	<resultMap id="BaseResultMap" type="Bin">
		<id column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="binTypeuuid" property="binType.uuid" jdbcType="VARCHAR" />
		<result column="binTypecode" property="binType.code" jdbcType="VARCHAR" />
		<result column="binTypename" property="binType.name" jdbcType="VARCHAR" />
		<result column="wrhuuid" property="wrh.uuid" jdbcType="VARCHAR" />
		<result column="wrhcode" property="wrh.code" jdbcType="VARCHAR" />
		<result column="wrhname" property="wrh.name" jdbcType="VARCHAR" />
		<result column="shelfUuid" property="shelfUuid" jdbcType="VARCHAR" />
		<result column="binusage" property="usage" jdbcType="VARCHAR" />
		<result column="binLevel" property="binLevel" jdbcType="VARCHAR" />
		<result column="binColumn" property="binColumn" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="companyUuid" property="companyUuid" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="LONGVARCHAR" />
	</resultMap>

	<select id="get" parameterType="map" resultMap="BaseResultMap">
		select u.*
		from
		sardine_bin u
		where u.uuid = #{uuid,jdbcType=VARCHAR}
		and u.companyuuid
		= #{companyUuid,jdbcType=VARCHAR}
	</select>

	<select id="getByCode" parameterType="map" resultMap="BaseResultMap">
		select u.*
		from sardine_bin u
		where u.code = #{code,jdbcType=VARCHAR}
		and
		u.companyuuid = #{companyUuid,jdbcType=VARCHAR}
	</select>

	<insert id="insert" parameterType="Bin">
		insert into
		sardine_bin (
		uuid,
		code,
		bintypeuuid,
		bintypecode,
		bintypename,
		wrhuuid,
		wrhcode,
		wrhname,
		shelfuuid,
		binusage,
		binlevel,
		bincolume,
		state,
		companyuuid,
		version
		)
		values (
		#{uuid,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{bintype.uuid,jdbcType=VARCHAR},
		#{bintype.code,jdbcType=VARCHAR},
		#{bintype.name,jdbcType=VARCHAR},
		#{wrh.uuid,jdbcType=VARCHAR},
		#{wrh.code,jdbcType=VARCHAR},
		#{wrh.name,jdbcType=VARCHAR},
		#{shelfUuid,jdbcType=VARCHAR},
		#{usage,jdbcType=VARCHAR},
		#{binLevel,jdbcType=VARCHAR},
		#{binColumn,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		#{companyUuid,jdbcType=VARCHAR},
		#{version,jdbcType=LONGVARCHAR}
		)
	</insert>

	<select id="queryByPage" parameterType="PageQueryDefinition"
		resultMap="BaseResultMap">
		select u.*
		from sardine_bin u
		where 1=1
		<if test="code != null">
			and u.code like CONCAT(CONCAT('%', #{code}),
			'%')
		</if>
		<if test="companyUuid != null">
			and u.companyUuid = #{companyUuid,jdbcType=VARCHAR}
		</if>
		<if test="state != null">
			and u.state = #{state,jdbcType=VARCHAR}
		</if>
		<if test="states != null">
			and u.state in ${states}
		</if>
		<if test="usage != null">
			and u.binusage = #{usage, jdbcType=VARCHAR}
		</if>
		<if test="usages != null">
			and u.binusage in ${usages}
		</if>
		<if test="binTypeUuid != null">
			and u.binTypeUuid = #{binTypeUuid, jdbcType=VARCHAR}
		</if>
		<if test="binTypes != null">
			and u.binTypeUuid in ${binTypes}
		</if>
		<if test="sortField != null and sortField == 'code'">
			order by t.code ${orderDir}
		</if>
		<!-- <if test="sortField != null and sortField == 'name'"> order by t.name 
			${orderDir} </if> <if test="sortField != null and sortField == 'createdtime'"> 
			order by t.createdtime ${orderDir} </if> <if test="sortField != null and 
			sortField == 'lastModifytime'"> order by t.lastModifytime ${orderDir} </if> -->
	</select>

	<delete id="remove" parameterType="map">
		delete from sardine_bin where
		uuid
		= #{uuid,jdbcType=VARCHAR}
		and version =
		#{version,jdbcType=LONGVARCHAR}
	</delete>
</mapper>